apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  selector:
    matchLabels:
      app: backend-pod
  template:
    metadata:
      labels:
        app: backend-pod
    spec:
      serviceAccountName: backend-service-account
      containers:
      - name: backend-pod
        image: ${ECR}/backend
        resources:
          limits:
            memory: "100Mi"
            cpu: "150m"
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80


# Service Account for the backend to access kubernetes secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: backend-secret-reader-cluster-role
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: backend-secret-reader-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: backend-secret-reader-cluster-role
subjects:
  - kind: ServiceAccount
    name: backend-service-account
    namespace: ${NAMESPACE}