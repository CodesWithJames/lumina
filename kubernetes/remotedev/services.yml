apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment-${NAMESPACE}
spec:
  selector:
    matchLabels:
      app: frontend-container-${NAMESPACE}
  template:
    metadata:
      labels:
        app: frontend-container-${NAMESPACE}
    spec:
      containers:
      - name: frontend-container-${NAMESPACE}
        image: 319923562419.dkr.ecr.ap-southeast-2.amazonaws.com/lumina-images/frontend
        env:
          - name: BACKENDAPI
            value: api.${NAMESPACE}.lumina.earth
        resources:
          limits:
            memory: "500Mi"
            cpu: "0.2"
        ports:
        - containerPort: 80
        - containerPort: 33440
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service-${NAMESPACE}
spec:
  selector:
    app: frontend-container-${NAMESPACE}
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingresse-${NAMESPACE}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
          if ($http_origin ~* "^https?://((?:www\.lumina\.earth)|(?:.*\.lumina\.earth))$") {
            set $cors "true";
          }
          if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
          }

          if ($cors = "true") {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' '*' always; # changed this
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
          }

          if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token';
            add_header 'Access-Control-Expose-Headers' '*'; # changed this
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
          }
spec:
  rules:
  - host: ${NAMESPACE}.lumina.earth
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: frontend-service-${NAMESPACE}
              port:
                number: 80
  - host: api.${NAMESPACE}.lumina.earth
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: backend-service-${NAMESPACE}
              port:
                number: 80

# Ingress that will open api for framework services
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: framework-ingress
#   clusterName: framework
#   annotations:
#       kubernetes.io/ingress.class: alb
#       alb.ingress.kubernetes.io/scheme: internet-facing
#       alb.ingress.kubernetes.io/target-type: ip
# spec:
#   rules:
#   - host: app.lumina.earth # frontend component
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: frontend-service
#             port:
#               number: 80
#   - host: api.lumina.earth # backend component
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: backend-service
#             port:
#               number: 80